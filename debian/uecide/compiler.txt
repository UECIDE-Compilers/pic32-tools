name=pic32-tools
family=pic32
version=20140530
revision=3
description=PIC32 Compiler version 1.43
compiler.smalldata=1024

optimize=${option:optimize.flag}
warnings=
extra.flags=

compiler.cflags=-G${compiler.smalldata}::-g::-ffunction-sections::-fdata-sections::-mno-smart-io::-mdebugger::-Wcast-align::-fno-short-double
compiler.cppflags=-G${compiler.smalldata}::-g::-fno-exceptions::-ffunction-sections::-fdata-sections::-mno-smart-io::-mdebugger::-Wcast-align::-fno-short-double
compiler.ldflags=-G${compiler.smalldata}::-Wl,--gc-sections,-Map,${build.path}/${filename}.map::-mdebugger::-mno-peripheral-libs::-nostartfiles
compiler.asflags=-g1::-Wa,--gdwarf-2

# Global compilation parameters for all programs
flags=-mprocessor=${build.mcu}::${optimize}::${warnings}::${compiler.flags}::${core.flags}::${board.flags}::${sketch.flags}::${extra.flags}::${option.flags}

# Compilation parameters for .c, .cpp and .S
cflags=${flags}::${compiler.cflags}::${core.cflags}::${board.cflags}::${sketch.cflags}::${option.cflags}
cppflags=${flags}::${compiler.cppflags}::${core.cppflags}::${board.cppflags}::${sketch.cppflags}::${option.cppflags}
asflags=${flags}::${compiler.asflags}::${core.asflags}::${board.asflags}::${sketch.asflags}::${option.asflags}

# Linking parameters
ldflags=${flags}::${compiler.ldflags}::${core.ldflags}::${board.ldflags}::${sketch.ldflags}::${option.ldflags}


gcc=${compiler:root}/bin/pic32-gcc
gpp=${compiler:root}/bin/pic32-g++
ar=${compiler:root}/bin/pic32-ar
objcopy=${compiler:root}/bin/pic32-objcopy
objdump=${compiler:root}/bin/pic32-objdump
size=${compiler:root}/bin/pic32-size
binhex=${compiler:root}/bin/pic32-bin2hex

### Causes some libraries (ugfx) to fail in Windows ###
#compile.preproc=${gpp}::-c::${source.name}::-o::${object.name}::-M::-MG::${cppflags}::${includes}::-w


compile.c=${gcc}::-c::${source.name}::-o::${object.name}::${cflags}::${includes}
compile.cpp=${gpp}::-c::${source.name}::-o::${object.name}::${cppflags}::${includes}
compile.S=${gpp}::${asflags}::-c::${source.name}::-o::${object.name}::${includes}
compile.ar=${ar}::rcs::${library}::${object.name}
compile.link=${gpp}::${ldflags}::-o::${build.path}/${filename}.elf::${object.filelist}::-L${build.path}::-L${libraries.path}::-Wl,--start-group::${libraries}::-Wl,--end-group::-lm::${extra.libs}

# Files to automatically generate from the elf file once built
compile.autogen.lss=__builtin_stdin::${build.path}/${filename}.lss::${objdump}::-h::-S::${build.path}/${filename}.elf
compile.autogen.hex=${binhex}::-a::${build.path}/${filename}.elf
compile.autogen.etx=__builtin_stdin::${build.path}/${filename}.etx::${objdump}::-t::${build.path}/${filename}.elf
compile.autogen.eep=${objcopy}::-O::ihex::-j::.eeprom::--set-section-flags=.eeprom=alloc,load::--no-change-warnings::--change-section-lma::.eeprom=0::${build.path}/${filename}.elf::${build.path}/${filename}.eep


compile.size=${size}::-S::${build.path}/${filename}.elf
compiler.size.text=1
compiler.size.rodata=0
compiler.size.data=2
compiler.size.bss=3
compiler.size.regex=^\s*(\d+)\s+(\d+)\s+(\d+)\s+(\d+)

compile.bin=${objcopy}::--input-target::binary::--output-target::elf32-tradlittlemips::--binary-architecture::mips::--rename-section::.data=.text,alloc,load,readonly,code,share,contents::${source.name}::${object.name}

compiler.error=^(.+):(\d+):\d+: (?:fatal\s)?error: (.*)
compiler.warning=^(.+):(\d+):\d+: warning: (.*)

options.warnings.name=Warnings
options.warnings.default=off
options.warnings.on.name=Enable all warnings
options.warnings.on.flags=-Wall
options.warnings.loud.name=Enable excessive warnings
options.warnings.loud.flags=-Wall::-Wextra
options.warnings.err.name=Error on warnings
options.warnings.err.flags=-Wall::-Werror
options.warnings.off.name=Suppress warnings
options.warnings.off.flags=-w

options.optimize.name=Optimization
options.optimize.default=size
options.optimize.purge=true
options.optimize.size.name=Smallest size
options.optimize.size.flag=-Os
options.optimize.speed.name=Fastest execution
options.optimize.speed.flag=-O3

options.isa.name=ISA
options.isa.default=mips32
options.isa.purge=true
options.isa.mips32.name=MIPS32
options.isa.mips32.flags=-mips32r2
options.isa.mips16.name=MIPS16
options.isa.mips16.flags=-mips16
options.isa.micromips.name=microMIPS
options.isa.micromips.flags=-mmicromips
